# docker-compose up -d
version: '3.4'

services:
  homeassistant:
    image: "homeassistant/home-assistant:stable"
    container_name: "homeassistant"
    hostname: "homeassistant"
    restart: unless-stopped
    privileged: true
    ports:
      - 8123:8123
    depends_on:
      - reverse-proxy
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "./homeassistant:/config"
      - "./homeassistant/docker/run:/etc/service.d/homeassistant/run"
    environment:
      - "DISABLE_JEMALLOC=1"
      - "PUID=1000"
      - "GUID=1000"
      - "UMASK=002"
      - "PACKAGES=iputils"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homeassistant.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.homeassistant.entrypoints=https"
      - "traefik.http.routers.homeassistant.tls=true"
      - "traefik.http.routers.homeassistant.tls.certresolver=myhomeresolver"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"

  rhasspy:
    image: "rhasspy/rhasspy"
    container_name: "rhasspy"
    restart: unless-stopped
    user: "${CURRENT_UID}:${CURRENT_GID}"
    ports:
      - "12101:12101"
      - "12183:12183"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "./rhasspy:/profiles"
    command: "--user-profiles /profiles --profile ${RHASSPY_PROFILE}"
    environment:
      - "TZ=${TZ}"      


  esphome:
    image: "esphome/esphome"
    container_name: "esphome"
    user: "${CURRENT_UID}:${CURRENT_GID}"
    restart: unless-stopped
    network_mode: host
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "./esphome:/config"
      - "./esphome/.platformio:/.platformio"
    environment:
      - "TZ=${TZ}"      
      - "ESPHOME_DASHBOARD_USE_PING=true" 


# rasa:
#   image: "rasa/rasa:latest-spacy-fr"
#   container_name: "rasa"
#   user: "1000:1000"
#   command: "--enable-api"
#   restart: unless-stopped
#   ports:
#     - 5005:5005
#   volumes:
#     - "./rasa:/app"
#   environment:
#     - "/etc/localtime:/etc/localtime:ro"


  tools:
    build: tools
    container_name: tools
    restart: unless-stopped
    user: "${CURRENT_UID}:${CURRENT_GID}"
    depends_on:
      - homeassistant
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/watchdog.conf:/etc/watchdog.conf"
      - ".:/home/pi/myhome"
    ports:
      - "4200:4200"
    environment:
      - "USER_PI_PASSWORD=${TOOLS_USER_PI_PASSWORD}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shellinabox.rule=Host(`${TRAEFIK_DOMAIN}`)&&PathPrefix(`/shellinabox`)"
      - "traefik.http.routers.shellinabox.entrypoints=https"
      - "traefik.http.routers.shellinabox.tls=true"
      - "traefik.http.routers.shellinabox.tls.certresolver=myhomeresolver"
      - "traefik.http.services.shellinabox.loadbalancer.server.port=4200"

  nodered:
    image: nodered/node-red
    container_name: nodered
    restart: unless-stopped
    depends_on:
      - homeassistant
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "./nodered:/data"
      - ".:/data/myhome"
    ports:
      - "1880:1880"
    environment:
      - "TZ=${TZ}"      
      - "NODERED_ACCESS_TOKEN=${NODERED_ACCESS_TOKEN}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodered.rule=Host(`${TRAEFIK_DOMAIN}`)&&PathPrefix(`/nodered`)"
      - "traefik.http.routers.nodered.entrypoints=https"
      - "traefik.http.routers.nodered.tls=true"
      - "traefik.http.routers.nodered.tls.certresolver=myhomeresolver"
      - "traefik.http.services.nodered.loadbalancer.server.port=1880"

  duplicati:
    image: ghcr.io/linuxserver/duplicati
    container_name: duplicati
    restart: unless-stopped 
    ports:
      - 8200:8200
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "./duplicati/config:/config"
      - "./duplicati/backups:/backups"
      - "$HOME:/source"
    environment:
      - "TZ=${TZ}"      
#     - PUID=1000
#     - PGID=1000
#     - TZ=Europe/Paris
#     - CLI_ARGS= #optional
 
  mosquitto:
    image: "eclipse-mosquitto:latest"
    container_name: "mosquitto"
    user: "${CURRENT_UID}:${CURRENT_GID}"
    restart: unless-stopped 
    ports:
      - 8883:8883
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "./mosquitto/config:/mosquitto/config"
      - "./mosquitto/log:/mosquitto/log"
      - "./mosquitto/data:/mosquitto/data"
    environment:
      - "TZ=${TZ}"      

  zigbee2mqttGUI:
    depends_on:
      - mosquitto
    image: "carldebilly/zigbee2mqttassistant"
    container_name: "zigbee2mqttGUI"
    restart: unless-stopped 
    user: "${CURRENT_UID}:${CURRENT_GID}"
    ports:
      - 8880:80
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
    environment:
      - "TZ=${TZ}"      
      - "Z2MA_SETTINGS__MQTTSERVER=mosquitto"
      - "Z2MA_SETTINGS__MQTTSECURE=INSECURE"
      - "Z2MA_SETTINGS__MQTTPORT=8883"
      - "Z2MA_SETTINGS__MQTTUSERNAME=${MQTT_USER}" 
      - "Z2MA_SETTINGS__MQTTPASSWORD=${MQTT_PASSWORD}"

  reverse-proxy:
    image: traefik:latest
    restart: unless-stopped
    container_name: reverse_proxy
    ports: 
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/acme:/etc/traefik/acme"
    environment:
      - "TZ=${TZ}"      
      - "TRAEFIK_ACCESSLOG=false"
      - "TRAEFIK_LOG_LEVEL=error"  
      - "TRAEFIK_ACCESSLOG_FIELDS_DEFAULTMODE=keep"
      - "TRAEFIK_ACCESSLOG_FIELDS_HEADERS_DEFAULTMODE=keep"
      - "TRAEFIK_ENTRYPOINTS_HTTP=true"
      - "TRAEFIK_ENTRYPOINTS_HTTP_ADDRESS=:80"
      - "TRAEFIK_ENTRYPOINTS_HTTPS=true"
      - "TRAEFIK_ENTRYPOINTS_HTTPS_ADDRESS=:443"
      - "TRAEFIK_PROVIDERS_DOCKER=true"
      - "TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false"
      - "TRAEFIK_API=false"
      - "TRAEFIK_API_INSECURE=true"
      - "TRAEFIK_CERTIFICATESRESOLVERS_MYHOMERESOLVER=true"
      - "TRAEFIK_CERTIFICATESRESOLVERS_MYHOMERESOLVER_ACME_EMAIL=${EMAIL}"
      - "TRAEFIK_CERTIFICATESRESOLVERS_MYHOMERESOLVER_ACME_STORAGE=/etc/traefik/acme/acme.json"
      - "TRAEFIK_CERTIFICATESRESOLVERS_MYHOMERESOLVER_ACME_HTTPCHALLENGE_ENTRYPOINT=http"
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)||PathPrefix(`/dashboard`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=http"
      - "traefik.http.services.api.loadbalancer.server.port=80"
        #- "traefik.http.routers.api.middlewares=auth"
        #      - "traefik.http.middlewares.auth.basicauth.users=${MYHOME_TRAEFIK_USER}"

